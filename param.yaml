# @file    param.yaml
# @brief   an easy way for changing parameters (like pid, MPC, and other parameters), no need for recompile.
#
# @author  Junde
# @date    2024-02-26
# @version 1.0


# hardware-sim
urdf: "model/urdf/robot.urdf"


horizons: 16
ctrl_num: 10  # TODO: design the ctrl way



lf_wheel: "LF_wheel" # body name
rf_wheel: "RF_wheel"
lh_wheel: "LH_wheel"
rh_wheel: "RH_wheel"

lf_hip: "LF_HFE" # joint name
rf_hip: "RF_HFE"
lh_hip: "LH_HFE"
rh_hip: "RH_HFE"

lf_foot: "LF_foot" # body name
rf_foot: "RF_foot"
lh_foot: "LH_foot"
rh_foot: "RH_foot"

base: "base_link"

# Q_rpy: [5, 5, 20]
# Q_pos: [10, 10, 60]
# Q_omega: [0, 0, 0.3]
# Q_vel: [0.2, 0.2, 0.2]
mu: 0.7

# Q_rpy: [ 2, 2, 10 ]
# Q_pos: [ 4, 4, 40 ]
# Q_omega: [ 0.02, 0.02, 0.3 ]
# Q_vel: [ 0.2, 0.2, 0.4 ]

# Q_rpy: [ 1.0, 1.0, 10 ]
# Q_pos: [ 10, 10, 50 ]
# Q_omega: [ 0.02, 0.02, 0.3 ]
# Q_vel: [ 0.2, 0.2, 0.1 ]

# hardware-sim
estimation_mode: 2 # 0-linearKFPositionVelocityEstimator  |  1-legTestMode  |  2-cheatMode
leg_index: 1 #单腿控制模式时对应大腿编号 0-fl 1 fr 2-rl 3-rr

# des_pos: [0.25, 0.45, 0.0] # front-left-leg
# des_pos: [0.18, 0.22,-0.2]
des_pos: [ 0.15, 0.1, 0.1 ] #ZZS更改 选取的一个较合适的单腿控制点位

# des_pos: [-0.3, -0.45, 0.0] # rear-right-leg
# des_pos: [-0.4, -0.22, -0.22]

des_vel: [ 80.0, 80.0, 60.0 ] # Kp: a, h, k
# des_vel: [0.0, 0.0, 0.0] # Kp: a, h, k
des_tau: [ 2.5, 2.5, 1.5, 0.0, 0.0 ] # Kd: a, h, k, f, w
# des_tau: [0.0, 0.0, 0.0, 0.0, 0.0] # Kd: a, h, k, f, w
des_foot_state: [ 3, 3, 3, 3 ] # 0: hold   ;   1: calibration   ;   2: extension   ;   3: compression

Q_rpy: [ 5, 5, 10 ]
Q_pos: [ 10, 10, 50 ]
Q_omega: [ 0.01, 0.01, 0.2 ]
Q_vel: [ 0.2, 0.2, 0.2 ]

dt: 0.002 # TODO: change dt consistent with dt in mujoco
dtMPC: 0.03 # might be 0.02

rw: 0.25  # radius of wheel // TODO: rHip_wc
height: 0.55 # standing height

qLegDes: [ 0.048, -0.592, 0.574, -4.722 ]
vLegDes: [ 0., 0., 0., 0. ] # foot is 0.9(0.077) when compression, 0 when extend

jointsSigns: [ 1.0, 1.0, 1.0, 1.0,
               -1.0, 1.0, 1.0, 1.0,
               1.0, 1.0, 1.0, 1.0,
               -1.0, 1.0, 1.0, 1.0 ]
KP: [ 50, 50, 100, 100 ]
KD: [ 1, 1, 1, 1 ]

test: [ 0.5, 0.5, 0.5, 0.5 ]

# 是否为仿真 仿真：1 硬件：0
bool_sim: 0


